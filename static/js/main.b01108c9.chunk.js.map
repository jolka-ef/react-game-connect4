{"version":3,"sources":["../../react-hame/src/Board.module.css","../../react-hame/src/Square.module.css","../../react-hame/src/Status.module.css","../../react-hame/src/App.module.css","../../react-hame/src/Circle.js","../../react-hame/src/playersColors.js","../../react-hame/src/Square.js","../../react-hame/src/utils/ordinalNumbers.js","../../react-hame/src/Board.js","../../react-hame/src/Status.js","../../react-hame/src/utils/cloneArray.js","../../react-hame/src/utils/create2DArray.js","../../react-hame/src/calculateWinner.js","../../react-hame/src/App.js","../../react-hame/src/index.js"],"names":["module","exports","Headers","Table","TableCell","TableCol","TableColHighlight","TableContainer","TableContent","Title","Button","Circle","Winner","Container","Text","Tile","Game","GameTitle","props","className","fill","radius","x","y","react_default","a","createElement","viewBox","cx","cy","r","playersColors","A","B","Square","colNr","handleChange","handleClick","player","winner","hasOwnProperty","styles","concat","onMouseEnter","onFocus","onClick","data-col","Circle_Circle","ordinalNumbers","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","Board","boardSize","selected","winnerLine","rows","cols","Object","toConsumableArray","Array","map","el","data-index","key","headers","scope","row","rowNr","value","Square_Square","includes","index","Status","status","firstPlayer","isWinner","maxStepNumber","stepNumber","symbol","cloneArray","arr","isArray","create2DArray","nrOfArrays","arrLen","undefined","calculateWinner","board","keys","App","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createRows","moves","column","pop","reverse","event","state","isGameEnd","setState","selectedCol","target","dataset","col","isColFull","length","unshift","inherits","createClass","Status_Status","Board_Board","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b01108c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Headers\":\"Board_Headers__22hSE\",\"Table\":\"Board_Table__1z9RH\",\"TableCell\":\"Board_TableCell__2bMER\",\"TableCol\":\"Board_TableCol__DfBpc\",\"TableColHighlight\":\"Board_TableColHighlight__2mrXP\",\"TableContainer\":\"Board_TableContainer__1zTdF\",\"TableContent\":\"Board_TableContent__11orr\",\"Title\":\"Board_Title__1mHnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Square_Button__3HFLc\",\"Circle\":\"Square_Circle__3w_3F\",\"Winner\":\"Square_Winner__2IdNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Status_Container__19Cty\",\"Text\":\"Status_Text__3DCYg\",\"Tile\":\"Status_Tile__2TEUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"App_Game__1uG_v\",\"GameTitle\":\"App_GameTitle__3F9mo\"};","import React from 'react';\nimport\tPropTypes\tfrom\t'prop-types';\n\nexport const Circle = (props) => {\n  const {\n    className,\n    fill,\n    radius,\n    x,\n    y,\n  }\n  = props;\n  return (\n    <svg className={className} viewBox=\"0 0 100 100\">\n      <circle cx={x} cy={y} r={radius} fill={fill}/>\n    </svg>\n  )\n};\n\nCircle.propTypes = {\n  className: PropTypes.string,\n  fill: PropTypes.string,\n  radius: PropTypes.number,\n  x: PropTypes.number,\n  y: PropTypes.number,\n};\n","export const playersColors = {\n  \"A\" : \"#e75c65\",\n  \"B\" : \"#1d4161\"\n}","import React from 'react';\nimport styles from './Square.module.css'\nimport {Circle} from \"./Circle\";\nimport {playersColors} from \"./playersColors\";\nimport PropTypes from \"prop-types\";\n\n\nexport const Square = (props) => {\n  const {\n    colNr,\n    handleChange,\n    handleClick,\n    player,\n    winner\n  } = props;\n  const fill = playersColors.hasOwnProperty(player) ? playersColors[player] : \"currentColor\";\n  let className = styles.Button;\n  if (winner) {\n    className += ` ${styles.Winner}`;\n  }\n\n  return(\n    <button\n      onMouseEnter={handleChange}\n      onFocus={handleChange}\n      onClick={handleClick}\n      className={className}\n      data-col={colNr}\n    >\n      <Circle x={50} y={50} radius={40} fill={fill} className={styles.Circle}/>\n    </button>\n  )\n}\n\nSquare.propTypes = {\n  colNr: PropTypes.number,\n  handleChange: PropTypes.func,\n  handleClick: PropTypes.func,\n  y: PropTypes.number,\n  player: PropTypes.string,\n  winner: PropTypes.bool,\n};\n","export const ordinalNumbers = {\n    1: \"first\",\n    2: \"second\",\n    3: \"third\",\n    4: \"fourth\",\n    5: \"fifth\",\n    6: \"sixth\",\n    7: \"seventh\",\n    8: \"eighth\",\n    9: \"ninth\",\n    10: \"tenth\",\n    11: \"eleventh\",\n    12: \"twelfth\",\n    13: \"thirteenth\",\n    14: \"fourteenth\",\n    15: \"fifteenth\",\n    16: \"sixteenth\",\n    17: \"seventeenth\",\n    18: \"eighteenth\",\n    19: \"nineteenth\",\n    20: \"twentieth\",\n};\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from './Board.module.css'\nimport {Square} from \"./Square\"\nimport {ordinalNumbers} from \"./utils/ordinalNumbers\";\n\nexport const Board = (props) => {\n  const {\n    boardSize,\n    handleChange,\n    handleClick,\n    selected,\n    winnerLine\n  } = props;\n\n  let {rows} = props;\n\n  const cols = [...Array(boardSize)].map((el, colNr) => {\n      let className = styles.TableCol;\n        if (selected == colNr) {\n         className += ` ${styles.TableColHighlight}`;\n       }\n      return (\n        <col\n          className={className}\n          data-index={colNr}\n          key={colNr*colNr}\n        />\n      )\n    }\n  );\n\n  const headers = [...Array(boardSize)].map((el, colNr) =>\n    <th\n      className={styles.Headers}\n      key={colNr*colNr}\n      scope=\"col\"\n    >\n      {`${ordinalNumbers[colNr+1]} column`}\n    </th>);\n\n  const isInWinnerLine = (key) => {\n    return winnerLine.includes(key)\n  };\n\n  rows = rows.map((row, rowNr) => (\n    row.map((value, colNr) =>\n      (<td className={styles.TableCell}\n            key={rowNr+colNr}>\n          <Square\n            handleChange={handleChange}\n            handleClick={handleClick}\n            colNr={colNr}\n            key={`${rowNr}_${colNr}`}\n            player={value}\n            winner={isInWinnerLine(`${rowNr}_${colNr}`)}\n          />\n      </td>)\n    )\n  ));\n\n\n  return (\n    <div className={styles.TableContainer}>\n      <table className={styles.Table}>\n        <colgroup>\n          {cols}\n        </colgroup>\n        <thead>\n          <tr>\n            {headers}\n          </tr>\n        </thead>\n        <tbody className={styles.TableContent}>\n          {rows.map((row, index) => <tr key={index*index}>{row}</tr>)}\n        </tbody>\n      </table>\n    </div>\n  )\n};\n\nBoard.propTypes = {\n  boardSize : PropTypes.number,\n  handleChange : PropTypes.func,\n  handleClick : PropTypes.func,\n  rows : PropTypes.array,\n  selected : PropTypes.string,\n  winnerLine : PropTypes.array\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from './Status.module.css'\nimport {playersColors} from \"./playersColors\";\nimport {Circle} from './Circle'\n\n\nexport const Status = (props) => {\n  const {\n    firstPlayer,\n    isWinner,\n    maxStepNumber,\n    stepNumber\n  } = props;\n\n  let fill;\n  let status;\n\n  if (isWinner) {\n    status = \"Winner\";\n    fill = playersColors[isWinner.symbol]\n  } else if (stepNumber === maxStepNumber) {\n    status = \"It's a draw !!!\"\n  } else {\n    status = \"Up next\";\n    fill = firstPlayer ? playersColors[\"A\"] :  playersColors[\"B\"];\n  }\n\n  return (\n    <div className={styles.Container}>\n      <span className={styles.Text}>{status}</span>\n        <Circle className={styles.Tile} x={50} y={50} radius={40} fill={fill}/>\n    </div>\n  )\n}\n\nStatus.propTypes = {\n  firstPlayer : PropTypes.bool,\n  isWinner : PropTypes.bool,\n  maxStepNumber : PropTypes.number,\n  stepNumber : PropTypes.number\n}\n","/**\n * Creates deep copy of array of arrays with primitive values.\n * @param {Array} arr Array to copy.\n * @returns {Array} Copied array.\n */\n\n\nexport const cloneArray = (arr) => arr.map(arr => Array.isArray(arr) ? cloneArray(arr) : arr);\n\n\n","/**\n * Creates array of arrays.\n * @param {!number} nrOfArrays Number of inner arrays contain within outer array.\n * @param {!number} arrLen Length of inner array.\n * @param {not undefined}[value] Optional inner array value.\n * @returns {[][]}\n */\n\nexport  function create2DArray(nrOfArrays, arrLen, value) {\n    if(value !== undefined) {\n        return [...Array(nrOfArrays)].map(() => Array(arrLen).fill(value))\n    } else {\n        return [...Array(nrOfArrays)].map(() => Array(arrLen))\n    }\n}\n\n","export const calculateWinner = (board, boardSize) => {\n\n  for (let x = 0; x < boardSize; x++) {\n    for (let y = 0; y < boardSize - 3; y++) {\n      const is4InTheRow = board[x][y] && board[x][y] === board[x][y + 1] &&\n                          board[x][y + 1] === board[x][y + 2] && board[x][y + 2] === board[x][y + 3];\n      if (is4InTheRow) {\n        return {\n          keys: [`${x}_${y}`, `${x}_${y + 1}`, `${x}_${y + 2}`, `${x}_${y + 3}`],\n          symbol: board[x][y]\n        }\n      }\n    }\n  }\n\n  for (let x = 0; x < boardSize - 3; x++) {\n    for (let y = 0; y < boardSize; y++) {\n      const is4inTheCol = board[x][y] && board[x][y] === board[x + 1][y] &&\n                          board[x][y] === board[x + 2][y] && board[x][y] === board[x + 3][y];\n      if (is4inTheCol) {\n        return {\n          keys: [`${x}_${y}`, `${x + 1}_${y}`, `${x + 2}_${y}`, `${x + 3}_${y}`],\n          symbol: board[x][y]\n        }\n      }\n    }\n  }\n\n  for (let x = 0; x < boardSize - 3; x++) {\n    for (let y = 0; y < boardSize - 3; y++) {\n      const is4inFallingDiag = board[x][y] && board[x][y] === board[x + 1][y + 1] &&\n                               board[x][y] === board[x + 2][y + 2] && board[x][y] === board[x + 3][y + 3];\n      if (is4inFallingDiag) {\n        return {\n          keys: [`${x}_${y}`, `${x + 1}_${y + 1}`, `${x + 2}_${y + 2}`, `${x + 3}_${y + 3}`],\n          symbol: board[x][y]\n        }\n      }\n    }\n  }\n\n\n  for (let x = 0; x < boardSize - 3; x++) {\n    for (let y = 3; y < boardSize; y++) {\n      const is4inRisingDiag = board[x][y] && board[x][y] === board[x + 1][y - 1] &&\n                              board[x][y] === board[x + 2][y - 2] && board[x][y] === board[x + 3][y - 3];\n      if (is4inRisingDiag) {\n        return {\n          keys: [`${x}_${y}`, `${x + 1}_${y - 1}`, `${x + 2}_${y - 2}`, `${x + 3}_${y - 3}`],\n          symbol: board[x][y]\n        }\n      }\n    }\n  }\n\n  return false;\n};\n","import React from 'react';\nimport styles from './App.module.css'\nimport {Board} from \"./Board\"\nimport {Status} from \"./Status\";\nimport {cloneArray} from './utils/cloneArray';\nimport {create2DArray} from \"./utils/create2DArray\";\nimport {calculateWinner} from \"./calculateWinner\";\n\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.boardSize = 7;\n        this.maxStepNumber = this.boardSize * this.boardSize;\n\n        const moves = create2DArray(this.boardSize, 0);\n        const rows = create2DArray(this.boardSize, this.boardSize, null);\n\n        this.state = {\n            firstPlayer: true,\n            isWinner: false,\n            moves: moves,\n            rows: rows,\n            selectedCol: null,\n            stepNumber: 0,\n        }\n    }\n\n    /**\n     * Creates board rows.\n     * @param {Array} moves Players moves stored for each column.\n     */\n    createRows = (moves) => {\n        const rows = [...Array(this.boardSize)].map(() => moves.map((column) => column.pop()));\n        return rows.reverse();\n    };\n\n    /**\n     * Highlights selected column.\n     * @param {!Event} event The event associated with the on mouse enter.\n     */\n    handleChange = (event) => {\n        const isWinner = calculateWinner(this.state.rows, this.boardSize);\n        const isGameEnd = this.state.stepNumber === this.maxStepNumber;\n        if (isWinner || isGameEnd) {\n            this.setState({\n                selectedCol: null,\n            });\n            return\n        }\n\n        const colNr = event.target.dataset.col;\n        this.setState({\n            selectedCol: colNr,\n        });\n    };\n\n    /**\n     *  Places tile on the board.\n     * @param {!Event} event The event associated with the click.\n     */\n    handleClick = (event) => {\n        const colNr = event.target.dataset.col;\n        const isWinner = calculateWinner(this.state.rows, this.boardSize);\n        const isColFull = this.state.moves[colNr].length === this.boardSize;\n        if (isWinner || isColFull) {\n            return;\n        }\n\n        this.setState(state => {\n            const moves = cloneArray(state.moves);\n            const column = moves[colNr];\n            column.unshift(state.firstPlayer ? \"A\" : \"B\");\n            return {\n                firstPlayer: !state.firstPlayer,\n                moves: moves,\n                stepNumber: state.stepNumber + 1\n            }\n        });\n\n        this.setState(state => {\n            const moves = cloneArray(state.moves);\n            const rows = this.createRows(moves);\n            return {\n                rows: rows\n            }\n        })\n\n    };\n\n    render() {\n        const isWinner = calculateWinner(this.state.rows, this.boardSize);\n        const winnerLine = isWinner ? isWinner.keys : [];\n\n        return (\n          <main>\n              <section>\n                  <h1 className={styles.GameTitle}>Connect 4</h1>\n\n                  <div className={styles.Game}>\n\n                      <Status\n                        firstPlayer={this.state.firstPlayer}\n                        isWinner={isWinner}\n                        maxStepNumber={this.maxStepNumber}\n                        stepNumber={this.state.stepNumber}\n                      />\n\n                      <Board\n                        boardSize={this.boardSize}\n                        handleChange={this.handleChange}\n                        handleClick={this.handleClick}\n                        isWinner={isWinner}\n                        rows = {cloneArray(this.state.rows)}\n                        selected={this.state.selectedCol}\n                        winnerLine = {winnerLine}\n                      />\n\n                  </div>\n\n              </section>\n          </main>\n        )\n    }\n\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './cssBase/index.css';\nimport {App} from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}